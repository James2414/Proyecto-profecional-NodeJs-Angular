{"ast":null,"code":"import { GLOBAL } from './GLOBAL';\nimport { HttpHeaders } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AdminService {\n  constructor(_http) {\n    this._http = _http;\n    this.url = GLOBAL.url;\n  }\n  login_admin(data) {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this._http.post(this.url + 'login_admin', JSON.stringify(data), {\n      headers\n    });\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  // Método\n  isAuthenticated(allowRoles) {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      return false;\n    }\n    try {\n      const helper = new JwtHelperService();\n      var decodedToken = helper.decodeToken(token);\n      if (!decodedToken) {\n        console.log('token no VALIDO');\n        localStorage.removeItem('token');\n        return false;\n      }\n    } catch (error) {\n      localStorage.removeItem('token');\n      return false;\n    }\n    return allowRoles.includes(decodedToken['role']);\n  }\n  actualiza_config_admin(id, data, token) {\n    let headers;\n    if (data.logo) {\n      let headers = new HttpHeaders({\n        'Authorization': token\n      });\n      const fd = new FormData();\n      fd.append('titulo', data.titulo);\n      fd.append('serie', data.serie);\n      fd.append('correlativo', data.correlativo);\n      fd.append('categorias', JSON.stringify(data.categorias)); // Asegúrate de serializar objetos si es necesario\n      fd.append('logo', data.logo);\n      // Enviar la solicitud PUT con FormData\n      return this._http.put(`${this.url}actualiza_config_admin/${id}`, fd, {\n        headers\n      });\n    } else {\n      headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      });\n      // Enviar la solicitud PUT con datos JSON\n      return this._http.put(`${this.url}actualiza_config_admin/${id}`, data, {\n        headers\n      });\n    }\n  }\n  obtener_config_admin(token) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': token\n    });\n    return this._http.get(`${this.url}obtener_config_admin`, {\n      headers\n    });\n  }\n  obtener_config_publico() {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this._http.get(`${this.url}obtener_config_publico`, {\n      headers\n    });\n  }\n  static #_ = this.ɵfac = function AdminService_Factory(t) {\n    return new (t || AdminService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdminService,\n    factory: AdminService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["GLOBAL","HttpHeaders","JwtHelperService","AdminService","constructor","_http","url","login_admin","data","headers","set","post","JSON","stringify","getToken","localStorage","getItem","isAuthenticated","allowRoles","token","helper","decodedToken","decodeToken","console","log","removeItem","error","includes","actualiza_config_admin","id","logo","fd","FormData","append","titulo","serie","correlativo","categorias","put","obtener_config_admin","get","obtener_config_publico","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\james\\Desktop\\onlineStoreee-tienda-angular-Node-js\\onlineStoreee\\admin\\src\\app\\services\\admin.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GLOBAL } from './GLOBAL';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  public url: string;\n\n  constructor(private _http: HttpClient) {\n    this.url = GLOBAL.url;\n  }\n  \n  login_admin(data: any): Observable<any> {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this._http.post(this.url + 'login_admin', JSON.stringify(data), { headers });\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  \n  // Método\n  public isAuthenticated(allowRoles: string[]): boolean {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const helper = new JwtHelperService();\n      var decodedToken = helper.decodeToken(token);\n\n    \n    if (!decodedToken) {\n      console.log('token no VALIDO')\n      localStorage.removeItem('token');\n      return false;\n    }\n    } catch (error) {\n      localStorage.removeItem('token');\n      return false;\n    }\n\n\n    return allowRoles.includes(decodedToken['role']);\n  }\n\n\n\n  actualiza_config_admin(id: string, data: any, token: string): Observable<any> { \n    let headers: HttpHeaders;\n  \n    if (data.logo) {\n     let headers = new HttpHeaders({ 'Authorization': token });\n  \n      const fd = new FormData();\n      fd.append('titulo', data.titulo);\n      fd.append('serie', data.serie);\n      fd.append('correlativo', data.correlativo);\n      fd.append('categorias', JSON.stringify(data.categorias))// Asegúrate de serializar objetos si es necesario\n      fd.append('logo', data.logo);\n      \n      // Enviar la solicitud PUT con FormData\n      return this._http.put(`${this.url}actualiza_config_admin/${id}`, fd, { headers });\n    } else {\n      headers = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': token });\n      \n      // Enviar la solicitud PUT con datos JSON\n      return this._http.put(`${this.url}actualiza_config_admin/${id}`,data, { headers });\n    }\n  }\n  \n\nobtener_config_admin(token: string): Observable<any> {\n  let headers = new HttpHeaders({'Content-Type': 'application/json','Authorization': token});\n     return this._http.get(`${this.url}obtener_config_admin`, { headers });\n}\n\nobtener_config_publico(): Observable<any> {\n  let headers = new HttpHeaders().set('Content-Type','application/json');\n     return this._http.get(`${this.url}obtener_config_publico`,{ headers });\n}\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}