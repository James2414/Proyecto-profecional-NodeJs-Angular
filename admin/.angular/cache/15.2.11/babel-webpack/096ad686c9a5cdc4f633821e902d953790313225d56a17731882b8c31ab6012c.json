{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CreateProductoComponent = class CreateProductoComponent {\n  constructor(_productoService, _adminService, _router) {\n    this._productoService = _productoService;\n    this._adminService = _adminService;\n    this._router = _router;\n    this.producto = {\n      categoria: ''\n    };\n    this.imgSelect = 'assets/img/01.jpg';\n    this.token = null;\n    this.load_btn = false;\n    this.config_global = {};\n    this._adminService.obtener_config_publico().subscribe(response => {\n      if (response && response.data) {\n        this.config_global = response.data;\n        console.log(this.config_global);\n      } else {\n        console.warn('No se encontraron datos en la respuesta');\n      }\n    }, error => {\n      console.error('Error al obtener la configuración:', error);\n    });\n  }\n  ngOnInit() {}\n  registro(registroForm) {\n    if (registroForm.valid) {\n      if (this.file == undefined) {\n        iziToast.show({\n          title: 'Error',\n          titleColor: '#ff0000',\n          color: '#FFF',\n          class: 'text-danger',\n          position: 'topRight',\n          message: 'Debe subir una portada para registrar'\n        });\n      } else {\n        console.log(this.producto);\n        console.log(this.file);\n        this.load_btn = true;\n        this._productoService.registro_producto_admin(this.producto, this.file, this.token).subscribe(response => {\n          iziToast.show({\n            title: 'Succes',\n            titleColor: '#1DC74C',\n            color: '#FFF',\n            class: 'text-danger',\n            position: 'topRight',\n            message: 'Se Registro correctamente el producto'\n          });\n          this.load_btn = false;\n          this._router.navigate(['/panel/productos']);\n        }, error => {\n          console.log(error);\n          this.load_btn = false;\n        });\n      }\n      // Implementa la lógica para registrar el producto aquí\n    } else {\n      iziToast.show({\n        title: 'Error',\n        titleColor: '#ff0000',\n        color: '#FFF',\n        class: 'text-danger',\n        position: 'topRight',\n        message: 'Los datos del formulario no son validos!'\n      });\n      this.load_btn = false;\n      $('#input-portada').text('seleccionar imagen');\n      this.imgSelect = 'assets/img/01.jpg';\n      this.file = undefined; ///            \n    }\n  }\n  fileChangeEvent(event) {\n    if (event.target.files && event.target.files[0]) {\n      this.file = event.target.files[0];\n    } else {\n      iziToast.show({\n        title: 'ERROR NO ACCES',\n        titleColor: '#ff0000',\n        color: '#FFF',\n        class: 'text-danger',\n        position: 'topRight',\n        message: 'No IMAGE NO ACCES..'\n      });\n    }\n    // Validación de tamaño y tipo de archivo\n    if (this.file && this.file.size <= 4 * 1024 * 1024) {\n      if (this.file.type === 'image/png' || this.file.type === 'image/webp' || this.file.type === 'image/jpg' || this.file.type === 'image/gif' || this.file.type === 'image/jpeg') {\n        const reader = new FileReader();\n        reader.onload = e => this.imgSelect = reader.result;\n        // Asegúrate de que la imagen se lea correctamente\n        console.log(this.imgSelect);\n        reader.readAsDataURL(this.file);\n        $('#input-portada').text(this.file.name);\n        this.file = this.file;\n      } else {\n        iziToast.show({\n          title: 'ERROR',\n          titleColor: '#ff0000',\n          color: '#FFF',\n          class: 'text-danger',\n          position: 'topRight',\n          message: 'Solo se permiten imágenes en formato PNG, JPEG, JPG, GIF o WEBP'\n        });\n        $('#input-portada').text('seleccionar imagen');\n        this.imgSelect = 'assets/img/01.jpg';\n        this.file = undefined;\n      }\n    } else {\n      iziToast.show({\n        title: 'ERROR TAMANIO',\n        titleColor: '#ff0000',\n        color: '#FFF',\n        class: 'text-danger',\n        position: 'topRight',\n        message: 'La imagen es demasiado grande. Máximo 4MB'\n      });\n      $('#input-portada').text('seleccionar imagen');\n      this.imgSelect = 'assets/img/01.jpg';\n      this.file = undefined;\n    }\n    console.log(this.file);\n  }\n};\nCreateProductoComponent = __decorate([Component({\n  selector: 'app-create-producto',\n  templateUrl: './create-producto.component.html',\n  styleUrls: ['./create-producto.component.css']\n})], CreateProductoComponent);\nexport { CreateProductoComponent };","map":{"version":3,"names":["Component","CreateProductoComponent","constructor","_productoService","_adminService","_router","producto","categoria","imgSelect","token","load_btn","config_global","obtener_config_publico","subscribe","response","data","console","log","warn","error","ngOnInit","registro","registroForm","valid","file","undefined","iziToast","show","title","titleColor","color","class","position","message","registro_producto_admin","navigate","$","text","fileChangeEvent","event","target","files","size","type","reader","FileReader","onload","e","result","readAsDataURL","name","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\james\\Desktop\\onlineStoreee-tienda-angular-Node-js\\onlineStoreee\\admin\\src\\app\\components\\productos\\create-producto\\create-producto.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { ProductoService } from 'src/app/services/producto.service';\n\ndeclare var jQuery: any;\ndeclare var $: any;\ndeclare var iziToast: any;\n\n@Component({\n  selector: 'app-create-producto',\n  templateUrl: './create-producto.component.html',\n  styleUrls: ['./create-producto.component.css']\n})\nexport class CreateProductoComponent implements OnInit {\n\n\n  public producto : any = {\n    categoria: ''\n  };\n  public file : File | undefined;\n  public imgSelect: string | ArrayBuffer | null = 'assets/img/01.jpg';\n  public token: string | null = null;\n  public load_btn = false;\n  public config_global : any = {}\n\n  constructor(\n    private _productoService : ProductoService,\n    private _adminService : AdminService,\n    private _router : Router\n  ) { \n    this._adminService.obtener_config_publico().subscribe(\n      response => {\n        if (response && response.data) {\n          this.config_global = response.data;\n          console.log(this.config_global);\n        } else {\n          console.warn('No se encontraron datos en la respuesta');\n        }\n      },\n      error => {\n        console.error('Error al obtener la configuración:', error);\n      }\n    );\n    \n  }\n\n  ngOnInit(): void {\n  }\n  \n  registro(registroForm: NgForm){\n    if(registroForm.valid){\n      if(this.file == undefined){\n\n        iziToast.show({\n          title: 'Error',\n          titleColor: '#ff0000',\n          color: '#FFF',\n          class: 'text-danger',\n          position: 'topRight',\n          message: 'Debe subir una portada para registrar'\n        });\n\n      }else {\n        console.log(this.producto);\n      console.log(this.file);\n      this.load_btn = true;\n\n      this._productoService.registro_producto_admin(this.producto,this.file, this.token).subscribe(\n        response=>{\n          iziToast.show({\n            title: 'Succes',\n            titleColor: '#1DC74C',\n            color: '#FFF',\n            class: 'text-danger',\n            position: 'topRight',\n            message: 'Se Registro correctamente el producto'\n          });\n\n          this.load_btn = false;\n          this._router.navigate(['/panel/productos']);\n        },\n        error=>{\n          console.log(error);\n          this.load_btn = false;\n        }\n      );\n      }\n      // Implementa la lógica para registrar el producto aquí\n    } else {\n      iziToast.show({\n        title: 'Error',\n        titleColor: '#ff0000',\n        color: '#FFF',\n        class: 'text-danger',\n        position: 'topRight',\n        message: 'Los datos del formulario no son validos!'\n      });\n      this.load_btn = false;\n\n      \n      $('#input-portada').text('seleccionar imagen');\n      this.imgSelect = 'assets/img/01.jpg';\n      this.file = undefined;///            \n\n    }\n  }\n\n  fileChangeEvent(event: any): void {\n    if (event.target.files && event.target.files[0]) {\n        this.file = <File>event.target.files[0];\n    } else {\n        iziToast.show({\n            title: 'ERROR NO ACCES',\n            titleColor: '#ff0000',\n            color: '#FFF',\n            class: 'text-danger',\n            position: 'topRight',\n            message: 'No IMAGE NO ACCES..'\n        });\n    }\n\n    // Validación de tamaño y tipo de archivo\n    if (this.file && this.file.size <= 4 * 1024 * 1024){\n      if(this.file.type === 'image/png' || \n         this.file.type === 'image/webp' || \n         this.file.type === 'image/jpg' || \n         this.file.type === 'image/gif' || \n         this.file.type === 'image/jpeg'){\n\n        const reader = new FileReader();\n        reader.onload = e => this.imgSelect = reader.result;\n          // Asegúrate de que la imagen se lea correctamente\n        console.log(this.imgSelect);\n        reader.readAsDataURL(this.file);\n\n        $('#input-portada').text(this.file.name)\n        this.file = this.file\n\n      } else {\n        iziToast.show({\n          title: 'ERROR',\n          titleColor: '#ff0000',\n          color: '#FFF',\n          class: 'text-danger',\n          position: 'topRight',\n          message: 'Solo se permiten imágenes en formato PNG, JPEG, JPG, GIF o WEBP'\n        });\n\n        $('#input-portada').text('seleccionar imagen');\n        this.imgSelect = 'assets/img/01.jpg';\n        this.file = undefined;\n\n      }\n    } else {\n      iziToast.show({\n        title: 'ERROR TAMANIO',\n        titleColor: '#ff0000',\n        color: '#FFF',\n        class: 'text-danger',\n        position: 'topRight',\n        message: 'La imagen es demasiado grande. Máximo 4MB'\n      });\n\n      $('#input-portada').text('seleccionar imagen')\n      this.imgSelect = 'assets/img/01.jpg';\n      this.file = undefined;\n\n    }\n    console.log(this.file)\n }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}