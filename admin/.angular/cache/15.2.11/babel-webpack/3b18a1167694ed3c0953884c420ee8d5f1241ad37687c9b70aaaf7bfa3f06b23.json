{"ast":null,"code":"import { GLOBAL } from './GLOBAL';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductoService {\n  constructor(_http) {\n    this._http = _http;\n    this.url = GLOBAL.url;\n  }\n  //son 11 mentes 5basquet y 12 en beisbol \n  registro_producto_admin(data, file, token) {\n    let headers = new HttpHeaders({\n      'Authorization': token\n    });\n    const fd = new FormData();\n    fd.append('titulo', data.titulo);\n    fd.append('stock', data.stock);\n    fd.append('precio', data.precio);\n    fd.append('descripcion', data.descripcion);\n    fd.append('contenido', data.contenido);\n    fd.append('categoria', data.categoria);\n    // Asegúrate de que `file` es del tipo `File` y lo añades al FormData\n    if (file) {\n      fd.append('portada', file);\n    }\n    return this._http.post(`${this.url}registro_producto_admin`, fd, {\n      headers\n    });\n  }\n  listar_producto_admin(filtro, token) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': token\n    });\n    return this._http.get(`${this.url}listar_producto_admin/${filtro}`, {\n      headers\n    });\n  }\n  obtener_producto_admin(id, token) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': token\n    });\n    return this._http.get(`${this.url}obtener_producto_admin/${id}`, {\n      headers\n    });\n  }\n  actualizar_producto_admin(data, id, token) {\n    let headers;\n    if (data.portada) {\n      headers = new HttpHeaders({\n        'Authorization': token\n      });\n      const fd = new FormData();\n      fd.append('titulo', data.titulo);\n      fd.append('stock', data.stock);\n      fd.append('precio', data.precio);\n      fd.append('descripcion', data.descripcion);\n      fd.append('contenido', data.contenido);\n      fd.append('categoria', data.categoria);\n      fd.append('portada', data.portada);\n      // Enviar la solicitud POST con FormData\n      return this._http.put(`${this.url}actualizar_producto_admin/${id}`, fd, {\n        headers\n      });\n    } else {\n      headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      });\n      // Enviar la solicitud PUT con datos JSON\n      return this._http.put(`${this.url}actualizar_producto_admin/${id}`, data, {\n        headers\n      });\n    }\n  }\n  eliminar_producto_admin(id, token) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': token\n    });\n    return this._http.delete(`${this.url}eliminar_producto_admin/${id}`, {\n      headers\n    });\n  }\n  listar_inventario_producto_admin(id, token) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': token\n    });\n    return this._http.get(`${this.url}listar_inventario_producto_admin/${id}`, {\n      headers\n    });\n  }\n  eliminar_inventario_producto_admin(id, token) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': token\n    });\n    return this._http.get(`${this.url}eliminar_inventario_producto_admin/${id}`, {\n      headers\n    });\n  }\n  static #_ = this.ɵfac = function ProductoService_Factory(t) {\n    return new (t || ProductoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductoService,\n    factory: ProductoService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["GLOBAL","HttpHeaders","ProductoService","constructor","_http","url","registro_producto_admin","data","file","token","headers","fd","FormData","append","titulo","stock","precio","descripcion","contenido","categoria","post","listar_producto_admin","filtro","get","obtener_producto_admin","id","actualizar_producto_admin","portada","put","eliminar_producto_admin","delete","listar_inventario_producto_admin","eliminar_inventario_producto_admin","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\james\\Desktop\\onlineStoreee-tienda-angular-Node-js\\onlineStoreee\\admin\\src\\app\\services\\producto.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GLOBAL } from './GLOBAL';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductoService {\n\n  public url: string;\n\n  constructor(private _http: HttpClient) {\n    this.url = GLOBAL.url;\n  }\n//son 11 mentes 5basquet y 12 en beisbol \nregistro_producto_admin(data: any, file: File | undefined, token: any): Observable<any> {\n  let headers = new HttpHeaders({'Authorization': token});\n\n\n  const fd = new FormData();\n  fd.append('titulo', data.titulo);\n  fd.append('stock', data.stock);\n  fd.append('precio', data.precio);\n  fd.append('descripcion', data.descripcion);\n  fd.append('contenido', data.contenido);\n  fd.append('categoria', data.categoria);\n\n  // Asegúrate de que `file` es del tipo `File` y lo añades al FormData\n  if (file) {\n    fd.append('portada', file);\n  }\n\n  return this._http.post(`${this.url}registro_producto_admin`, fd, { headers });\n}\n\nlistar_producto_admin(filtro: any, token: any): Observable<any> {\n  let headers = new HttpHeaders({'Content-Type': 'application/json', 'Authorization': token});\n  return this._http.get(`${this.url}listar_producto_admin/${filtro}`, { headers });\n}\n\nobtener_producto_admin(id: string, token: any): Observable<any> {\n  let headers = new HttpHeaders({'Content-Type': 'application/json', 'Authorization': token});\n  return this._http.get(`${this.url}obtener_producto_admin/${id}`, { headers });\n}\n\nactualizar_producto_admin(data: any, id: string, token: any): Observable<any> {\n  let headers;\n\n  if (data.portada) {\n    headers = new HttpHeaders({ 'Authorization': token });\n\n    const fd = new FormData();\n    fd.append('titulo', data.titulo);\n    fd.append('stock', data.stock);\n    fd.append('precio', data.precio);\n    fd.append('descripcion', data.descripcion);\n    fd.append('contenido', data.contenido);\n    fd.append('categoria', data.categoria);\n    fd.append('portada', data.portada);\n\n    // Enviar la solicitud POST con FormData\n    return this._http.put(`${this.url}actualizar_producto_admin/${id}`, fd, { headers });\n  } else {\n    headers = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': token });\n    \n    // Enviar la solicitud PUT con datos JSON\n    return this._http.put(`${this.url}actualizar_producto_admin/${id}`, data, { headers });\n  }\n}\n\neliminar_producto_admin(id: string,token: any): Observable<any> {\n  let headers = new HttpHeaders({'Content-Type': 'application/json', 'Authorization': token});\n  return this._http.delete(`${this.url}eliminar_producto_admin/${id}`, { headers });\n}\n\nlistar_inventario_producto_admin(id: string,token: any): Observable<any> {\n  let headers = new HttpHeaders({'Content-Type': 'application/json', 'Authorization': token});\n  return this._http.get(`${this.url}listar_inventario_producto_admin/${id}`, { headers });\n}\n\neliminar_inventario_producto_admin(id: string,token: any): Observable<any> {\n  let headers = new HttpHeaders({'Content-Type': 'application/json', 'Authorization': token});\n  return this._http.get(`${this.url}eliminar_inventario_producto_admin/${id}`, { headers });\n}\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}