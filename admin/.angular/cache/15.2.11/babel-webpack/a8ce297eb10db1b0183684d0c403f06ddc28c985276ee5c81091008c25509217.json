{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/admin.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(_adminService, _router) {\n    this._adminService = _adminService;\n    this._router = _router;\n    this.user = {};\n    this.usuario = {};\n    this.token = this._adminService.getToken();\n    // Aquí puedes inicializar otras propiedades o ejecutar lógica adicional si es necesario\n  }\n  ngOnInit() {\n    if (this.token) {\n      this._router.navigate(['/']);\n    } else {\n      // MANTENER EN EL COMPONENTE\n    }\n  }\n  login(loginForm) {\n    if (loginForm.valid) {\n      console.log(this.user);\n      let data = {\n        email: this.user.email,\n        password: this.user.password\n      };\n      this._adminService.login_admin(data).subscribe(response => {\n        if (response.data === undefined) {\n          iziToast.show({\n            title: 'Error',\n            titleColor: '#ff0000',\n            color: '#FFF',\n            class: 'text-danger',\n            position: 'topRight',\n            message: response.message\n          });\n        } else {\n          this.usuario = response.data;\n          localStorage.setItem('token', response.token);\n          localStorage.setItem('id', response.data._id);\n          this._router.navigate(['/']);\n        }\n      }, error => {\n        console.log(error);\n      });\n    } else {\n      iziToast.show({\n        title: 'Error',\n        titleColor: '#ff0000',\n        color: '#FFF',\n        class: 'text-danger',\n        position: 'topRight',\n        message: 'Datos del formulario inválidos'\n      });\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AdminService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 26,\n    vars: 2,\n    consts: [[1, \"row\", 2, \"width\", \"100%\", \"height\", \"100%\", \"margin-top\", \"0px\"], [1, \"col-lg-8\", \"mx-auto\", 2, \"display\", \"flex\", \"align-items\", \"center\"], [1, \"px-md-5\", \"px-4\"], [1, \"modal-title\", \"mt-4\", \"mb-0\", \"text-center\", \"mb-5\"], [1, \"font-size-sm\", \"text-muted\", \"text-center\"], [3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"signin-email \"], [\"type\", \"email\", \"name\", \"email\", \"placeholder\", \"Correo electronico\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"signin-password\", 1, \"form-label\"], [1, \"cs-password-toggle\", \"input-group-overlay\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"tu contrase\\u00F1a\", \"required\", \"\", 1, \"form-control\", \"appended-form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"input-group-append-overlay\"], [1, \"btn\", \"cs-password-toggle-btn\", \"input-group-text\"], [\"type\", \"checkbox\", 1, \"custom-control-input\"], [1, \"cxi-eye\", \"cs-password-toggle-indicator\"], [1, \"sr-only\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n        i0.ɵɵtext(4, \"Iniciar Secion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\", 4);\n        i0.ɵɵtext(6, \"Inicie sesi\\u00F3n en su cuenta utilizando el correo electr\\u00F3nico y la contrase\\u00F1a proporcionados durante el registro.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"form\", 5, 6);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(8);\n          return i0.ɵɵresetView(ctx.login(_r0));\n        });\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Correo Electronico\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.user.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 7)(14, \"label\", 10);\n        i0.ɵɵtext(15, \"Contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 11)(17, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.user.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 13)(19, \"label\", 14);\n        i0.ɵɵelement(20, \"input\", 15)(21, \"i\", 16);\n        i0.ɵɵelementStart(22, \"span\", 17);\n        i0.ɵɵtext(23, \"Show password\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(24, \"button\", 18);\n        i0.ɵɵtext(25, \"Ingresar\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","_adminService","_router","user","usuario","token","getToken","ngOnInit","navigate","login","loginForm","valid","console","log","data","email","password","login_admin","subscribe","response","undefined","iziToast","show","title","titleColor","color","class","position","message","localStorage","setItem","_id","error","_","i0","ɵɵdirectiveInject","i1","AdminService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_7_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","LoginComponent_Template_input_ngModelChange_12_listener","$event","LoginComponent_Template_input_ngModelChange_17_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\james\\Desktop\\onlineStoreee-tienda-angular-Node-js\\onlineStoreee\\admin\\src\\app\\components\\login\\login.component.ts","C:\\Users\\james\\Desktop\\onlineStoreee-tienda-angular-Node-js\\onlineStoreee\\admin\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AdminService } from 'src/app/services/admin.service';\n\n\ndeclare var jQuery: any;\ndeclare var $: any;\ndeclare var iziToast: any;\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  public token: string | null;\n  public user: any= {};\n  public usuario :any ={};\n\n  constructor(\n    private _adminService: AdminService,\n    private _router: Router\n  ) {\n    this.token = this._adminService.getToken();\n    // Aquí puedes inicializar otras propiedades o ejecutar lógica adicional si es necesario\n  }\n\n  \n\n  ngOnInit(): void {\n    if(this.token){\n      this._router.navigate(['/']);\n    }else{\n      // MANTENER EN EL COMPONENTE\n    }\n  }\n\n\n  login(loginForm: NgForm) {\n    if (loginForm.valid) {\n      console.log(this.user);\n     \n      let data = {\n        email: this.user.email,\n        password: this.user.password\n      }\n\n      this._adminService.login_admin(data).subscribe(\n        response=>{\n         if(response.data === undefined){\n          iziToast.show({\n            title: 'Error',\n            titleColor: '#ff0000',\n            color: '#FFF',\n            class: 'text-danger',\n            position: 'topRight',\n            message: response.message\n          });\n         }else{\n          this.usuario = response.data;\n          localStorage.setItem('token', response.token);\n          localStorage.setItem('id', response.data._id);\n\n          this._router.navigate(['/']);\n         }\n        },\n        error=>{\n          console.log(error);\n        }\n      );\n      \n      \n    } else {\n      iziToast.show({\n        title: 'Error',\n        titleColor: '#ff0000',\n        color: '#FFF',\n        class: 'text-danger',\n        position: 'topRight',\n        message: 'Datos del formulario inválidos'\n      });\n    }\n  }\n}\n","<div class=\"row\" style=\"width: 100%;\nheight: 100%;margin-top: 0px;\">\n    <div class=\"col-lg-8 mx-auto\" style=\"display: flex;\n    align-items: center;\">\n        <div class=\" px-md-5 px-4\">\n            <h3 class=\"modal-title mt-4 mb-0 text-center mb-5\">Iniciar Secion</h3>\n            <p class=\"font-size-sm text-muted text-center\">Inicie sesión en su cuenta utilizando el correo electrónico y la contraseña proporcionados durante el registro.</p>\n            <form #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\n              <div class=\"form-group\">\n                <label for=\"signin-email \">Correo Electronico</label>\n                <input type=\"email\" class=\"form-control\" name=\"email\" [(ngModel)]=\"user.email\" placeholder=\"Correo electronico\" required=\"\">\n              </div>\n              <div class=\"form-group\">\n                <label for=\"signin-password\" class=\"form-label\">Contraseña</label>\n                <div class=\"cs-password-toggle input-group-overlay\">\n                  <input type=\"password\" class=\"form-control appended-form-control\" name=\"password\" [(ngModel)]=\"user.password\" placeholder=\"tu contraseña\" required=\"\">\n                  <div class=\"input-group-append-overlay\">\n                    <label class=\"btn cs-password-toggle-btn input-group-text\">\n                      <input type=\"checkbox\" class=\"custom-control-input\">\n                      <i class=\"cxi-eye cs-password-toggle-indicator\"></i>\n                      <span class=\"sr-only\">Show password</span>\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              <button type=\"submit\" class=\"btn btn-primary btn-block\">Ingresar</button>\n             \n            </form>\n          </div>\n    </div>\n</div>\n"],"mappings":";;;;AAgBA,OAAM,MAAOA,cAAc;EAOzBC,YACUC,aAA2B,EAC3BC,OAAe;IADf,KAAAD,aAAa,GAAbA,aAAa;IACb,KAAAC,OAAO,GAAPA,OAAO;IALV,KAAAC,IAAI,GAAO,EAAE;IACb,KAAAC,OAAO,GAAO,EAAE;IAMrB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACJ,aAAa,CAACK,QAAQ,EAAE;IAC1C;EACF;EAIAC,QAAQA,CAAA;IACN,IAAG,IAAI,CAACF,KAAK,EAAC;MACZ,IAAI,CAACH,OAAO,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;KAC7B,MAAI;MACH;IAAA;EAEJ;EAGAC,KAAKA,CAACC,SAAiB;IACrB,IAAIA,SAAS,CAACC,KAAK,EAAE;MACnBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,IAAI,CAAC;MAEtB,IAAIW,IAAI,GAAG;QACTC,KAAK,EAAE,IAAI,CAACZ,IAAI,CAACY,KAAK;QACtBC,QAAQ,EAAE,IAAI,CAACb,IAAI,CAACa;OACrB;MAED,IAAI,CAACf,aAAa,CAACgB,WAAW,CAACH,IAAI,CAAC,CAACI,SAAS,CAC5CC,QAAQ,IAAE;QACT,IAAGA,QAAQ,CAACL,IAAI,KAAKM,SAAS,EAAC;UAC9BC,QAAQ,CAACC,IAAI,CAAC;YACZC,KAAK,EAAE,OAAO;YACdC,UAAU,EAAE,SAAS;YACrBC,KAAK,EAAE,MAAM;YACbC,KAAK,EAAE,aAAa;YACpBC,QAAQ,EAAE,UAAU;YACpBC,OAAO,EAAET,QAAQ,CAACS;WACnB,CAAC;SACF,MAAI;UACJ,IAAI,CAACxB,OAAO,GAAGe,QAAQ,CAACL,IAAI;UAC5Be,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEX,QAAQ,CAACd,KAAK,CAAC;UAC7CwB,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEX,QAAQ,CAACL,IAAI,CAACiB,GAAG,CAAC;UAE7C,IAAI,CAAC7B,OAAO,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;MAE9B,CAAC,EACDwB,KAAK,IAAE;QACLpB,OAAO,CAACC,GAAG,CAACmB,KAAK,CAAC;MACpB,CAAC,CACF;KAGF,MAAM;MACLX,QAAQ,CAACC,IAAI,CAAC;QACZC,KAAK,EAAE,OAAO;QACdC,UAAU,EAAE,SAAS;QACrBC,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE,aAAa;QACpBC,QAAQ,EAAE,UAAU;QACpBC,OAAO,EAAE;OACV,CAAC;;EAEN;EAAC,QAAAK,CAAA,G;qBAtEUlC,cAAc,EAAAmC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdzC,cAAc;IAAA0C,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QChB3Bb,EAAA,CAAAe,cAAA,aAC+B;QAIgCf,EAAA,CAAAgB,MAAA,qBAAc;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACtEjB,EAAA,CAAAe,cAAA,WAA+C;QAAAf,EAAA,CAAAgB,MAAA,qIAA+G;QAAAhB,EAAA,CAAAiB,YAAA,EAAI;QAClKjB,EAAA,CAAAe,cAAA,iBAAwD;QAA9Bf,EAAA,CAAAkB,UAAA,sBAAAC,iDAAA;UAAAnB,EAAA,CAAAoB,aAAA,CAAAC,GAAA;UAAA,MAAAC,GAAA,GAAAtB,EAAA,CAAAuB,WAAA;UAAA,OAAYvB,EAAA,CAAAwB,WAAA,CAAAV,GAAA,CAAAvC,KAAA,CAAA+C,GAAA,CAAgB;QAAA,EAAC;QACrDtB,EAAA,CAAAe,cAAA,aAAwB;QACKf,EAAA,CAAAgB,MAAA,0BAAkB;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACrDjB,EAAA,CAAAe,cAAA,gBAA4H;QAAtEf,EAAA,CAAAkB,UAAA,2BAAAO,wDAAAC,MAAA;UAAA,OAAAZ,GAAA,CAAA7C,IAAA,CAAAY,KAAA,GAAA6C,MAAA;QAAA,EAAwB;QAA9E1B,EAAA,CAAAiB,YAAA,EAA4H;QAE9HjB,EAAA,CAAAe,cAAA,cAAwB;QAC0Bf,EAAA,CAAAgB,MAAA,uBAAU;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QAClEjB,EAAA,CAAAe,cAAA,eAAoD;QACgCf,EAAA,CAAAkB,UAAA,2BAAAS,wDAAAD,MAAA;UAAA,OAAAZ,GAAA,CAAA7C,IAAA,CAAAa,QAAA,GAAA4C,MAAA;QAAA,EAA2B;QAA7G1B,EAAA,CAAAiB,YAAA,EAAsJ;QACtJjB,EAAA,CAAAe,cAAA,eAAwC;QAEpCf,EAAA,CAAA4B,SAAA,iBAAoD;QAEpD5B,EAAA,CAAAe,cAAA,gBAAsB;QAAAf,EAAA,CAAAgB,MAAA,qBAAa;QAAAhB,EAAA,CAAAiB,YAAA,EAAO;QAMlDjB,EAAA,CAAAe,cAAA,kBAAwD;QAAAf,EAAA,CAAAgB,MAAA,gBAAQ;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;QAhBjBjB,EAAA,CAAA6B,SAAA,IAAwB;QAAxB7B,EAAA,CAAA8B,UAAA,YAAAhB,GAAA,CAAA7C,IAAA,CAAAY,KAAA,CAAwB;QAKMmB,EAAA,CAAA6B,SAAA,GAA2B;QAA3B7B,EAAA,CAAA8B,UAAA,YAAAhB,GAAA,CAAA7C,IAAA,CAAAa,QAAA,CAA2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}