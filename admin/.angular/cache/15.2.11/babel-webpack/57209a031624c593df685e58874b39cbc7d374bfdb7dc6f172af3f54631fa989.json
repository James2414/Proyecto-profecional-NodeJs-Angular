{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet VariedadProductoComponent = class VariedadProductoComponent {\n  constructor(_route, _productoService) {\n    this._route = _route;\n    this._productoService = _productoService;\n    // Definimos una lista de objetos con la información de cada producto\n    this.producto = {};\n    this.id = ''; // Inicializa como una cadena vacía\n    this.nueva_variedad = '';\n    this.load_btn = false;\n    this.token = localStorage.getItem('token');\n    this._route.params.subscribe(params => {\n      this.id = params['id']; // Asigna el id obtenido de la ruta a la variable id\n      this._productoService.obtener_producto_admin(this.id, this.token).subscribe(response => {\n        if (response.data == undefined) {\n          this.producto = undefined;\n        } else {\n          this.producto = response.data;\n        }\n        console.log(this.producto);\n      }, error => {\n        console.log(error);\n      });\n    });\n  }\n  ngOnInit() {}\n  agregar_variedad() {\n    if (this.nueva_variedad) {\n      this.producto.variedades.push({\n        titulo: this.nueva_variedad\n      });\n      this.nueva_variedad = '';\n    } else {\n      iziToast.error({\n        title: 'Error',\n        titleColor: '#FF0000',\n        color: '#FFF',\n        class: 'text-danger',\n        message: 'El campo de la variedad debe ser completado',\n        position: 'topRight'\n      });\n    }\n  }\n  eliminar_variedad(idx) {\n    this.producto.variedades.splice(idx, 1);\n  }\n  actualizar() {\n    if (this.producto.titulo_variedad) {\n      if (this.producto.variedades.length >= 1) {\n        //actualizar\n        this._productoService.actualizar_producto_variedades_admin({\n          titulo_variedad: this.producto.titulo_variedad,\n          variedades: this.producto.variedades\n        }, this.id, this.token).subscribe(response => {\n          console.log(response);\n        });\n      } else {\n        iziToast.show({\n          title: 'Error',\n          titleColor: '#FF0000',\n          color: '#FFF',\n          class: 'text-danger',\n          message: 'Debe agregar al menos una variedad',\n          position: 'topRight'\n        });\n      }\n    } else {\n      iziToast.show({\n        title: 'Error',\n        titleColor: '#FF0000',\n        color: '#FFF',\n        class: 'text-danger',\n        message: 'Debe completar el titulo de la variedad',\n        position: 'topRight'\n      });\n    }\n  }\n};\nVariedadProductoComponent = __decorate([Component({\n  selector: 'app-variedad-producto',\n  templateUrl: './variedad-producto.component.html',\n  styleUrls: ['./variedad-producto.component.css']\n})], VariedadProductoComponent);\nexport { VariedadProductoComponent };","map":{"version":3,"names":["Component","VariedadProductoComponent","constructor","_route","_productoService","producto","id","nueva_variedad","load_btn","token","localStorage","getItem","params","subscribe","obtener_producto_admin","response","data","undefined","console","log","error","ngOnInit","agregar_variedad","variedades","push","titulo","iziToast","title","titleColor","color","class","message","position","eliminar_variedad","idx","splice","actualizar","titulo_variedad","length","actualizar_producto_variedades_admin","show","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\james\\Desktop\\onlineStoreee-tienda-angular-Node-js\\onlineStoreee\\admin\\src\\app\\components\\productos\\variedad-producto\\variedad-producto.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductoService } from 'src/app/services/producto.service';\n\ndeclare var iziToast: any;\n\n@Component({\n  selector: 'app-variedad-producto',\n  templateUrl: './variedad-producto.component.html',\n  styleUrls: ['./variedad-producto.component.css']\n})\nexport class VariedadProductoComponent {\n\n  // Definimos una lista de objetos con la información de cada producto\n  public producto : any= {};\n  public id: string = ''; // Inicializa como una cadena vacía\n  public token: string | null;\n  public nueva_variedad = '';\n  public load_btn = false;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _productoService: ProductoService\n  ){\n    \n    this.token = localStorage.getItem('token');\n    this._route.params.subscribe(\n      params => {\n        this.id = params['id']; // Asigna el id obtenido de la ruta a la variable id\n\n        \n        this._productoService.obtener_producto_admin(this.id, this.token).subscribe(\n          response=>{\n            if(response.data == undefined){\n              this.producto = undefined;\n            }else {\n\n              this.producto = response.data;         \n            }\n            console.log(this.producto);\n\n          },\n          error=>{\n            console.log(error);\n          }\n        )\n      }\n    );\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  agregar_variedad(){\n    if(this.nueva_variedad){\n\n      this.producto.variedades.push({titulo: this.nueva_variedad})\n      this.nueva_variedad = '';\n    }else{\n      iziToast.error({\n        title: 'Error',\n        titleColor: '#FF0000',\n        color: '#FFF',\n        class: 'text-danger',\n        message: 'El campo de la variedad debe ser completado',\n        position: 'topRight'\n      });\n      \n    }\n  }\n\n  \n  eliminar_variedad(idx:number){\n    this.producto.variedades.splice(idx, 1)\n  }\n\n  actualizar(){\n    if(this.producto.titulo_variedad){\n      if(this.producto.variedades.length >= 1){\n        //actualizar\n        this._productoService.actualizar_producto_variedades_admin({\n          titulo_variedad: this.producto.titulo_variedad,\n          variedades: this.producto.variedades\n        },this.id,this.token ).subscribe(\n          response=>{\n            console.log(response)\n          }\n        )\n\n      }else {\n        iziToast.show({\n          title: 'Error',\n          titleColor: '#FF0000',\n          color: '#FFF',\n          class: 'text-danger',\n          message: 'Debe agregar al menos una variedad',\n          position: 'topRight'\n        });\n\n      }\n    }else {\n      iziToast.show({\n        title: 'Error',\n        titleColor: '#FF0000',\n        color: '#FFF',\n        class: 'text-danger',\n        message: 'Debe completar el titulo de la variedad',\n        position: 'topRight'\n      });\n    }\n  }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}